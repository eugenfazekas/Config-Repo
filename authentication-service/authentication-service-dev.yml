server:
    port: 4800
    ssl:
        key-alias: authentication_service
        key-store: src/main/resources/keystore/authentication_service.jks
        key-store-password: authenticationservicepassword
        trust-store: src/main/resources/keystore/cacerts
        trust-store-password: changeit
        #client-auth: need

logging:
    level: 
        com: debug
        org.springframework.cloud.commons.util.InetUtils: trace 

keystore:
    password: password
    privateKey: cronos.jks
    alias: cronos_server
 
spring:
    datasource: 
        url: "localhost:5432"
        username: "postgres"
        password: "{cipher}aae90af54edb4b8755c97279e9b578b32b28335f5f09ebbffd3b647731e85f4d"
    database:
        databaseName: "db_users"
        driverClassName: "org.postgresql.Driver" 
    mail:
        host: smtp.gmail.com
        port: 587
        username: eugenfazekas.mailtrap@gmail.com
        password: "{cipher}2aa6738619358207b4079a8dfc907eb762725da0f037fd616bf66f92391ec960"
        properties:
            mail:
                smtp:
                    starttls:
                        enable: true
                    auth: true  
    zipkin:
        baseUrl: http://localhost:9411
    sleuth:
        sampler:
            rate: 100 
    cloud:
        stream:
            bindings:
                output:
                    destination: userDetailsPrepare 
                    content-type: application/json 
            kafka:
                binder:
                    zkNodes: localhost
                    brokers: localhost          
          
eureka:
    client:
        register-with-eureka: true
        fetch-registry: true    
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/
        securePortEnabled: true
    instance:
        hostname: localhost
        instance-id: ${spring.application.name}:${server.port}      
        securePortEnabled: true
        securePort: ${server.port}
        nonSecurePortEnabled: false

emailservice:
    subjecten: Demo Project account activation
    text1en: Dear
    text2en: "Thanks for you're registration to our website, and you can sign is with the followed username: "
    text3en: You can activate you're account by the followed link    
    validationLink: https://localhost:5555/gatewaytoapi1/api1/v1/user/userKeyCheck/

client:
    secret: secret 

resourceService:
    client-id: resourceserver
    client-secret: resourceserversecret
    createUserResourceUrl: https://resource-service/api2/v1/user/createUserResource